---
title: "Class 13: RNA-Seq Analysis Mini-Project"
author: "Eric Jordahl"
format: pdf
date: 2022-11-09
TOC: TRUE
---

# Section 1: Differential Expression Analysis

```{r, message=FALSE}
library(DESeq2)
metaFile <- "GSE37704_metadata.csv"
countFile <- "GSE37704_featurecounts.csv"

# Import metadata and take a peak
colData = read.csv(metaFile, row.names=1)
head(colData)
```

```{r}
# Import countdata
countData = read.csv(countFile, row.names=1)
head(countData)
```

## **Q1**
**Q. Complete the code below to remove the troublesome first column from countData**

```{r}
# Note we need to remove the odd first $length col
countData <- as.matrix(countData[,-1])
head(countData)
```

```{r}
all(row.names(colData) == colnames(countData))
```

All match except we have to get rid of the zero count genes.

## **Q2**
**Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).**

```{r}
keep.inds <- rowSums(countData) != 0
counts = countData[keep.inds,]
head(counts)
```
# QC with PCA

```{r}
pca <- prcomp(t(counts), scale = TRUE)
summary(pca)
```

```{r}

plot(pca$x[,1], pca$x[,2], col=as.factor(colData$condition), pch=16)
```

# Running DESeq2

```{r, message=FALSE}
library(DESeq2)
```

```{r}
dds = DESeqDataSetFromMatrix(countData=counts,
                             colData=colData,
                             design=~condition)
dds = DESeq(dds)

res <- results(dds)
head(res)
```


## **Q3**
**Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff**

```{r}
summary(res)
```

There are 4349 upregulated genes and 4396 downregulated genes

```{r}
plot( res$log2FoldChange, -log(res$padj) )
```

## **Q4**
**Improve this plot by completing the below code, which adds color and axis labels**

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[res$log2FoldChange > 2 ] <- "blue"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
mycols[res$log2FoldChange < -2] <- "red"
mycols[res$padj > 0.05 ] <- "green"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
abline(v=c(-2,2))
```

# Adding Gene Annotation

## **Q5**
**Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.**

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

res$symbol <-  mapIds(org.Hs.eg.db,
                    keys=row.names(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

res$entrez <-  mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name <-  mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10)
```

## **Q6**
**Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.**

```{r}
res = res[order(res$pvalue),]
write.csv(res, file="deseq_results.csv")
```

# Section 2: Pathway Analysis or Gene Set Enrichment

We can use `gage()` with KEGG and GO

```{r, message=FALSE}
library(gage)
library(gageData)
library(pathview)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

```{r}
keggres = gage(foldchanges, gsets=kegg.sets.hs)
attributes(keggres)
```

```{r}
head(keggres$less)
```

```{r, message=FALSE}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

![](hsa04110.pathview.png)

```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

```{r, message=FALSE}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

## **Q7**
**Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?**

```{r}
## Focus on top 5 downregulated pathways here for demo purposes only
keggrespathways_down <- rownames(keggres$less)[1:5]

# Extract the 8 character long IDs part of each string
keggresids_down = substr(keggrespathways_down, start=1, stop=8)
keggresids_down
```


```{r, message=FALSE}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

![](hsa04110.pathview.png)
![](hsa03030.pathview.png)
![](hsa03013.pathview.png)
![](hsa03440.pathview.png)
![](hsa04114.pathview.png)

# Section 3: Gene Ontology

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```

# Section 4: Reactome Analysis

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```

## **Q8**
**What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?**

The most significant Entities p-value is the Endosomal/ Vacuolar Pathway. The most significant pathways do not match the KEGG results. The likely difference between these results are because they are built from 2 separate databases.